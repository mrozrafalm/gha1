name: First workflow
on:
    push:
        # branches: ["test", "main"]
        branches: ["test", ]
    issue_comment: 
        types: [edited,deleted]
    issues:
        types:
          - closed
          - reopened
jobs:
    lint:
        runs-on: ubuntu-latest
        steps:
            - name: Get repo
              uses: actions/checkout@v4

            - name: Cache node modules
              id: cache-npm
              uses: actions/cache@v3
              env:
                cache-name: cache-node-modules
              with:
                # npm cache files are stored in `~/.npm` on Linux/macOS
                path: ~/.npm
                key: ${{ runner.os }}-npm-deps-${{ hashFiles('**/package-lock.json') }}
                restore-keys: |
                  ${{ runner.os }}-npm-deps-

            - name: Install dependencies
              run: npm ci
            
            - name: Run lint
              run: npm run lint
    test:
        runs-on: ubuntu-latest
        needs: [lint]
        outputs:
          testout: ${{ steps.tOut.outputs.tOut }}
          files: ${{ steps.list.outputs.sFiles }}
        steps:
            - name: Get repo
              uses: actions/checkout@v4

            - name: Cache node modules
              id: cache-npm
              uses: actions/cache@v3
              env:
                cache-name: cache-node-modules
              with:
                # npm cache files are stored in `~/.npm` on Linux/macOS
                path: ~/.npm
                key: ${{ runner.os }}-npm-deps-${{ hashFiles('**/package-lock.json') }}
                restore-keys: |
                  ${{ runner.os }}-npm-deps-

            - name: Install dependencies
              run: npm ci

            - name: Run test
              run: npm run test

            - name: List files
              id: list
              run: |
                LSFILES=$(ls package.json)
                echo "sFiles=$LSFILES" >> $GITHUB_OUTPUT

            - name: Output artifacts
              uses: actions/upload-artifact@v3
              with:
                name: out-afa
                path: |
                    package*
                    !package.json
                    index.html
                    src
            - name: output
              id: tOut
              run: echo "tOut=${{ toJson(github.run_id) }}" >> $GITHUB_OUTPUT
                
    build:
        runs-on: ubuntu-latest
        needs: [test]
        steps:
            - name: Get repo
              uses: actions/checkout@v4
            
            - name: Cache node modules
              id: cache-npm
              uses: actions/cache@v3
              env:
                cache-name: cache-node-modules
              with:
                # npm cache files are stored in `~/.npm` on Linux/macOS
                path: ~/.npm
                key: ${{ runner.os }}-npm-deps-${{ hashFiles('**/package-lock.json') }}
                restore-keys: |
                  ${{ runner.os }}-npm-deps-

            - name: Install dependencies
              run: npm ci

            - name: Run build
              run: npm run build

            - name: Download artifact
              uses: actions/download-artifact@v3
              with:
                name: out-afa

            - name: Print output
              run: |
                echo "Zmienna: ${{ needs.test.outputs.testout }}"
                echo "Pliczek: ${{ needs.test.outputs.files }}"

            - name: List all files
              run: | 
                ls -al